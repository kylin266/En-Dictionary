{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSearch = _useState2[0],\n      setSearching = _useState2[1];\n\n  var _useState3 = useState('Search gi do'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: !isSearch ? 'Từ điển Anh - Anh' : '',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerLeft: function headerLeft() {\n            return isSearch ? _jsx(TextInput, {\n              editable: true,\n              style: {\n                \"color\": \"#FFFFFF\"\n              },\n              maxLength: 40,\n              onChangeText: function onChangeText(text) {\n                return setValue(text);\n              },\n              value: value\n            }) : '';\n          },\n          headerRight: function headerRight() {\n            return !isSearch ? _jsx(Pressable, {\n              onPress: function onPress() {\n                setSearching(true);\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"search\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            }) : '';\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Từ điển Việt - Anh',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        },\n        headerRight: function headerRight() {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref6) {\n              var pressed = _ref6.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            children: _jsx(FontAwesome, {\n              name: \"search\",\n              size: 25,\n              color: Colors[colorScheme].text,\n              style: {\n                marginRight: 15\n              }\n            })\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","useState","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","isSearch","setSearching","value","setValue","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerLeft","text","headerRight","pressed","opacity","marginRight","navigate","TabBarIcon","props","marginBottom"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable, TextInput, View } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n  const [isSearch, setSearching] = useState(false);\n  const [value,setValue] = useState('Search gi do');\n\n    return (\n      <BottomTab.Navigator\n        initialRouteName=\"TabOne\"\n        screenOptions={{\n          tabBarActiveTintColor: Colors[colorScheme].tint,\n        }}>\n        <BottomTab.Screen\n          name=\"TabOne\"\n          component={TabOneScreen}\n          options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n            title: !isSearch ? 'Từ điển Anh - Anh' : '',\n            tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n            headerLeft: () => (\n              isSearch?\n              (<TextInput\n                editable\n                style={{\n                  \"color\": \"#FFFFFF\"\n                }}\n                maxLength={40}\n                onChangeText={(text: any)=>setValue(text)}\n                value={value}\n              />) : ''\n            ),\n            headerRight: () => (\n              !isSearch ?\n                <Pressable\n                  // onPress={() => navigation.navigate('Modal')}\n                  onPress={() => {\n                    setSearching(true);\n                  }}\n                  style={({ pressed }) => ({\n                    opacity: pressed ? 0.5 : 1,\n                  })}>\n                  <FontAwesome\n                    name=\"search\"\n                    size={25}\n                    color={Colors[colorScheme].text}\n                    style={{ marginRight: 15 }}\n                  />\n                </Pressable> : ''\n            ),\n          })}\n        />\n        <BottomTab.Screen\n          name=\"TabTwo\"\n          component={TabTwoScreen}\n          options={{\n            title: 'Từ điển Việt - Anh',\n            tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n            headerRight: () => (\n              <Pressable\n                onPress={() => navigation.navigate('Modal')}\n                style={({ pressed }) => ({\n                  opacity: pressed ? 0.5 : 1,\n                })}>\n                <FontAwesome\n                  name=\"search\"\n                  size={25}\n                  color={Colors[colorScheme].text}\n                  style={{ marginRight: 15 }}\n                />\n              </Pressable>\n            ),\n          }}\n        />\n      </BottomTab.Navigator>\n    );\n  }\n\n  /**\n   * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n   */\n  function TabBarIcon(props: {\n    name: React.ComponentProps<typeof FontAwesome>['name'];\n    color: string;\n  }) {\n    return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}