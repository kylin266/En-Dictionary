{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect, useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { createTable, openDatabase, getWordHistory, addHistory } from \"./db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var loadDataCallback = useCallback(function _callee() {\n    var db, storedWord;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(openDatabase());\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(createTable(db));\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getWordHistory(db));\n\n          case 8:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.t0 = [];\n\n          case 11:\n            storedWord = _context.t0;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(addHistory(db, 'alen'));\n\n          case 14:\n            if (storedWord.length) {\n              setData(storedWord);\n            }\n\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t1 = _context[\"catch\"](0);\n            console.error(_context.t1);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  }, []);\n  useEffect(function () {\n    loadDataCallback();\n  }, [loadDataCallback]);\n  console.log('getdata', data);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","useCallback","useEffect","useState","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","createTable","openDatabase","getWordHistory","addHistory","App","isLoadingComplete","colorScheme","data","setData","loadDataCallback","db","storedWord","length","console","error","log"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect, useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {createTable,openDatabase,getWordHistory, addHistory} from './db';\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const [data,setData] = useState([]);\n  const loadDataCallback = useCallback(async () => {\n    try {\n      const db = await openDatabase();\n      await createTable(db); \n      let storedWord = await getWordHistory(db) || []; \n      await addHistory(db,'alen');\n      if (storedWord.length) {\n        setData(storedWord);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadDataCallback();\n  }, [loadDataCallback]);\n\n  console.log('getdata',data);\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,SAAQC,WAAR,EAAoBC,YAApB,EAAiCC,cAAjC,EAAiDC,UAAjD;;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGR,kBAAkB,EAA5C;EACA,IAAMS,WAAW,GAAGR,cAAc,EAAlC;;EACA,gBAAuBH,QAAQ,CAAC,EAAD,CAA/B;EAAA;EAAA,IAAOY,IAAP;EAAA,IAAYC,OAAZ;;EACA,IAAMC,gBAAgB,GAAGhB,WAAW,CAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEhBQ,YAAY,EAFI;;UAAA;YAE3BS,EAF2B;YAAA;YAAA,iCAG3BV,WAAW,CAACU,EAAD,CAHgB;;UAAA;YAAA;YAAA,iCAIVR,cAAc,CAACQ,EAAD,CAJJ;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA,cAIY,EAJZ;;UAAA;YAI7BC,UAJ6B;YAAA;YAAA,iCAK3BR,UAAU,CAACO,EAAD,EAAI,MAAJ,CALiB;;UAAA;YAMjC,IAAIC,UAAU,CAACC,MAAf,EAAuB;cACrBJ,OAAO,CAACG,UAAD,CAAP;YACD;;YARgC;YAAA;;UAAA;YAAA;YAAA;YAUjCE,OAAO,CAACC,KAAR;;UAViC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAYjC,EAZiC,CAApC;EAcApB,SAAS,CAAC,YAAM;IACde,gBAAgB;EACjB,CAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;EAIAI,OAAO,CAACE,GAAR,CAAY,SAAZ,EAAsBR,IAAtB;;EACA,IAAI,CAACF,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OACE,MAAC,gBAAD;MAAA,WACE,KAAC,UAAD;QAAY,WAAW,EAAEC;MAAzB,EADF,EAEE,KAAC,SAAD,KAFF;IAAA,EADF;EAMD;AACF"},"metadata":{},"sourceType":"module"}