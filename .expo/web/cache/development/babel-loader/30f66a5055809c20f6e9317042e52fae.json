{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar plugin = require(\"./lib/sqlite.core.js\");\n\nvar SQLiteFactory = plugin.SQLiteFactory;\nvar config = [[false, \"SQLitePlugin\", \"transaction\", false, true, true], [false, \"SQLitePlugin\", \"readTransaction\", false, true, true], [false, \"SQLitePlugin\", \"close\", false, false, true], [false, \"SQLitePlugin\", \"executeSql\", true, false, true], [false, \"SQLitePlugin\", \"sqlBatch\", false, false, true], [false, \"SQLitePlugin\", \"attach\", true, false, true], [false, \"SQLitePlugin\", \"detach\", false, false, true], [false, \"SQLitePluginTransaction\", \"executeSql\", true, false, false], [false, \"SQLiteFactory\", \"deleteDatabase\", false, false, true], [true, \"SQLiteFactory\", \"openDatabase\", false, false, true], [false, \"SQLiteFactory\", \"echoTest\", false, false, true]];\nvar originalFns = {};\nconfig.forEach(function (entry) {\n  var _entry = _slicedToArray(entry, 3),\n      returnValueExpected = _entry[0],\n      prototype = _entry[1],\n      fn = _entry[2];\n\n  var originalFn = plugin[prototype].prototype[fn];\n  originalFns[prototype + \".\" + fn] = originalFn;\n});\n\nfunction enablePromiseRuntime(enable) {\n  if (enable) {\n    createPromiseRuntime();\n  } else {\n    createCallbackRuntime();\n  }\n}\n\nfunction createCallbackRuntime() {\n  config.forEach(function (entry) {\n    var _entry2 = _slicedToArray(entry, 6),\n        returnValueExpected = _entry2[0],\n        prototype = _entry2[1],\n        fn = _entry2[2],\n        argsNeedPadding = _entry2[3],\n        reverseCallbacks = _entry2[4],\n        rejectOnError = _entry2[5];\n\n    plugin[prototype].prototype[fn] = originalFns[prototype + \".\" + fn];\n  });\n  plugin.log(\"Callback based runtime ready\");\n}\n\nfunction createPromiseRuntime() {\n  config.forEach(function (entry) {\n    var _entry3 = _slicedToArray(entry, 6),\n        returnValueExpected = _entry3[0],\n        prototype = _entry3[1],\n        fn = _entry3[2],\n        argsNeedPadding = _entry3[3],\n        reverseCallbacks = _entry3[4],\n        rejectOnError = _entry3[5];\n\n    var originalFn = plugin[prototype].prototype[fn];\n\n    plugin[prototype].prototype[fn] = function () {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (argsNeedPadding && args.length == 1) {\n        args.push([]);\n      }\n\n      var promise = new Promise(function (resolve, reject) {\n        var success = function success() {\n          if (!returnValueExpected) {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            return resolve(args);\n          }\n        };\n\n        var error = function error(err) {\n          plugin.log.apply(plugin, ['error: ', fn].concat(args, [arguments]));\n\n          if (rejectOnError) {\n            reject(err);\n          }\n\n          return false;\n        };\n\n        var retValue = originalFn.call.apply(originalFn, [_this].concat(args, [reverseCallbacks ? error : success, reverseCallbacks ? success : error]));\n\n        if (returnValueExpected) {\n          return resolve(retValue);\n        }\n      });\n      return promise;\n    };\n  });\n  plugin.log(\"Promise based runtime ready\");\n}\n\nSQLiteFactory.prototype.enablePromise = enablePromiseRuntime;\nmodule.exports = new SQLiteFactory();","map":{"version":3,"names":["plugin","require","SQLiteFactory","config","originalFns","forEach","entry","returnValueExpected","prototype","fn","originalFn","enablePromiseRuntime","enable","createPromiseRuntime","createCallbackRuntime","argsNeedPadding","reverseCallbacks","rejectOnError","log","args","length","push","promise","Promise","resolve","reject","success","error","err","arguments","retValue","call","enablePromise","module","exports"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/node_modules/react-native-sqlite-storage/sqlite.js"],"sourcesContent":["/*\n * sqlite.js\n *\n * Created by Andrzej Porebski on 10/29/15.\n * Copyright (c) 2015-16 Andrzej Porebski.\n *\n * This library is available under the terms of the MIT License (2008).\n * See http://opensource.org/licenses/alphabetical for full text.\n */\nvar plugin = require('./lib/sqlite.core.js');\nvar {SQLiteFactory} = plugin;\n\nvar config = [\n\n  // meaning: [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]\n\n  [false,\"SQLitePlugin\",\"transaction\",false,true,true],\n  [false,\"SQLitePlugin\",\"readTransaction\",false,true,true],\n  [false,\"SQLitePlugin\",\"close\",false,false,true],\n  [false,\"SQLitePlugin\",\"executeSql\",true,false,true],\n  [false,\"SQLitePlugin\",\"sqlBatch\",false,false,true],\n  [false,\"SQLitePlugin\",\"attach\",true,false,true],\n  [false,\"SQLitePlugin\",\"detach\",false,false,true],\n  [false,\"SQLitePluginTransaction\",\"executeSql\",true,false,false],\n  [false,\"SQLiteFactory\",\"deleteDatabase\",false,false,true],\n  [true, \"SQLiteFactory\",\"openDatabase\",false,false,true],\n  [false,\"SQLiteFactory\",\"echoTest\",false,false,true]\n];\n\nvar originalFns = {};\nconfig.forEach(entry => {\n  let [returnValueExpected,prototype,fn]= entry;\n  let originalFn = plugin[prototype].prototype[fn];\n  originalFns[prototype + \".\" + fn] = originalFn;\n});\n\nfunction enablePromiseRuntime(enable){\n  if (enable){\n    createPromiseRuntime();\n  } else {\n    createCallbackRuntime();\n  }\n}\nfunction createCallbackRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]= entry;\n    plugin[prototype].prototype[fn] = originalFns[prototype + \".\" + fn];\n  });\n  plugin.log(\"Callback based runtime ready\");\n}\nfunction createPromiseRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]= entry;\n    let originalFn = plugin[prototype].prototype[fn];\n    plugin[prototype].prototype[fn] = function(...args){\n      if (argsNeedPadding && args.length == 1){\n        args.push([]);\n      }\n      var promise = new Promise((resolve,reject) => {\n        let success = function(...args){\n          if (!returnValueExpected) {\n           return resolve(args);\n          }\n        };\n        let error = function(err){\n          plugin.log('error: ',fn,...args,arguments);\n          if (rejectOnError) {\n            reject(err);\n          }\n          return false;\n        };\n        var retValue = originalFn.call(this,...args,reverseCallbacks ? error : success, reverseCallbacks ? success : error);\n        if (returnValueExpected){\n          return resolve(retValue);\n        }\n      });\n\n      return promise;\n    }\n  });\n  plugin.log(\"Promise based runtime ready\");\n}\nSQLiteFactory.prototype.enablePromise = enablePromiseRuntime;\n\nmodule.exports = new SQLiteFactory();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}