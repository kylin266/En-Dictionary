{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as WebBrowser from 'expo-web-browser';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Audio } from 'expo-av';\nimport { Text, View } from \"./Themed\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useState } from 'react';\nimport { deleteNote, getWordNoteByWord, insertNote, openDatabase, UpdateWordNote } from \"../db\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SearchTextInfo(_ref) {\n  var navigation = _ref.navigation,\n      data = _ref.data,\n      path = _ref.path;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      sound = _useState2[0],\n      setSound = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  function playSound(url) {\n    var sound;\n    return _regeneratorRuntime.async(function playSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sound = new Audio.Sound();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(sound.loadAsync({\n              uri: url\n            }));\n\n          case 3:\n            setSound(sound);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var wordInfo = !!data && data[0] || {};\n  var meanings = wordInfo.meanings || [];\n  return _jsxs(View, {\n    style: styles.getStartedContainer,\n    children: [_jsxs(Text, {\n      style: styles.pronunciation,\n      lightColor: \"rgba(0,0,0,0.8)\",\n      darkColor: \"rgba(255,255,255,0.8)\",\n      children: [\"Pronunciation: \", wordInfo.phonetic]\n    }), !!wordInfo.phonetics && wordInfo.phonetics.map(function (value, key) {\n      return _jsxs(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: 'row',\n          backgroundColor: '#0EC0A7'\n        },\n        children: [_jsxs(Text, {\n          style: styles.getStartedTextItalic,\n          lightColor: \"rgba(0,0,0,0.8)\",\n          darkColor: \"rgba(255,255,255,0.8)\",\n          children: [key == 0 ? \"(enUK)\" : \"(enUS)\", \" : \", value.text || \"\"]\n        }), !!value.audio ? _jsx(Pressable, {\n          onPress: function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(playSound(value.audio));\n\n                  case 2:\n                    return _context2.abrupt(\"return\", _context2.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          children: _jsx(FontAwesome, {\n            name: \"file-audio-o\",\n            size: 18,\n            style: {\n              marginLeft: 15\n            },\n            color: \"#FFFFFF\"\n          })\n        }) : null]\n      }, key);\n    }), _jsx(View, {\n      style: styles.separator,\n      lightColor: \"#eee\",\n      darkColor: \"rgba(255,255,255,0.1)\"\n    }), !!meanings && meanings.map(function (value, key) {\n      var definitions = value.definitions || [];\n      return _jsxs(View, {\n        style: {\n          backgroundColor: '#0EC0A7'\n        },\n        children: [_jsx(Text, {\n          style: styles.infoText,\n          lightColor: \"rgba(0,0,0,0.8)\",\n          darkColor: \"rgba(255,255,255,0.8)\",\n          children: value.partOfSpeech || ''\n        }), !!definitions && definitions.map(function (def, num) {\n          return _jsxs(View, {\n            style: {\n              display: 'flex',\n              backgroundColor: '#0EC0A7'\n            },\n            children: [_jsxs(Text, {\n              style: styles.getStartedText,\n              lightColor: \"rgba(0,0,0,0.8)\",\n              darkColor: \"rgba(255,255,255,0.8)\",\n              children: [num + 1, \". \", def.definition || '']\n            }), !def.synonyms && def.synonyms.length != 0 && _jsxs(Text, {\n              style: styles.getStartedText,\n              lightColor: \"rgba(0,0,0,0.8)\",\n              darkColor: \"rgba(255,255,255,0.8)\",\n              children: [\"synonyms:\", !def.synonyms.map(function (sys, num2) {\n                return _jsx(Pressable, {\n                  onPress: function _callee2() {\n                    return _regeneratorRuntime.async(function _callee2$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            return _context3.abrupt(\"return\", navigation.navigate('Modal', {\n                              value: sys,\n                              navigation: navigation\n                            }));\n\n                          case 1:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.infoDetailSmallBold,\n                    lightColor: \"rgba(0,0,0,0.8)\",\n                    darkColor: \"rgba(255,255,255,0.8)\",\n                    children: [\" \", sys, \" \"]\n                  })\n                }, num2);\n              })]\n            }), !!def.antonyms && def.antonyms.length != 0 && _jsxs(Text, {\n              style: styles.infoDetailSmall,\n              lightColor: \"rgba(0,0,0,0.8)\",\n              darkColor: \"rgba(255,255,255,0.8)\",\n              children: [\"antonyms:\", def.antonyms.map(function (anym, num2) {\n                return _jsx(Pressable, {\n                  onPress: function _callee3() {\n                    return _regeneratorRuntime.async(function _callee3$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            return _context4.abrupt(\"return\", navigation.navigate('Modal', {\n                              value: anym,\n                              navigation: navigation\n                            }));\n\n                          case 1:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.infoDetailSmallBold,\n                    lightColor: \"rgba(0,0,0,0.8)\",\n                    darkColor: \"rgba(255,255,255,0.8)\",\n                    children: [\" \", anym, \" \"]\n                  })\n                }, num2);\n              })]\n            }), !!def.example && _jsxs(Text, {\n              style: styles.exampleText,\n              lightColor: \"rgba(0,0,0,0.8)\",\n              darkColor: \"rgba(255,255,255,0.8)\",\n              children: [\"Example: \", def.example || '']\n            })]\n          }, num);\n        }), !!value.synonyms && value.synonyms.length != 0 && _jsxs(Text, {\n          style: styles.infoDetail,\n          lightColor: \"rgba(0,0,0,0.8)\",\n          darkColor: \"rgba(255,255,255,0.8)\",\n          children: [\"Synonyms:\", value.synonyms.map(function (sys, num2) {\n            return _jsx(Pressable, {\n              onPress: function _callee4() {\n                return _regeneratorRuntime.async(function _callee4$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        return _context5.abrupt(\"return\", navigation.navigate('Modal', {\n                          value: sys,\n                          navigation: navigation\n                        }));\n\n                      case 1:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              },\n              children: _jsxs(Text, {\n                style: styles.infoDetailSmallBold,\n                lightColor: \"rgba(0,0,0,0.8)\",\n                darkColor: \"rgba(255,255,255,0.8)\",\n                children: [\" \", sys, \" \"]\n              })\n            }, num2);\n          })]\n        }), !!value.antonyms && value.antonyms.length != 0 && _jsxs(Text, {\n          style: styles.infoDetail,\n          lightColor: \"rgba(0,0,0,0.8)\",\n          darkColor: \"rgba(255,255,255,0.8)\",\n          children: [\"Antonyms:\", value.antonyms.map(function (anym, num2) {\n            return _jsx(Pressable, {\n              onPress: function _callee5() {\n                return _regeneratorRuntime.async(function _callee5$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        return _context6.abrupt(\"return\", navigation.navigate('Modal', {\n                          value: anym,\n                          navigation: navigation\n                        }));\n\n                      case 1:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              },\n              children: _jsxs(Text, {\n                style: styles.infoDetailSmallBold,\n                lightColor: \"rgba(0,0,0,0.8)\",\n                darkColor: \"rgba(255,255,255,0.8)\",\n                children: [\" \", anym, \" \"]\n              })\n            }, num2);\n          })]\n        })]\n      }, key);\n    }), _jsx(Button, {\n      title: \"Note\",\n      onPress: function _callee6() {\n        var db, note;\n        return _regeneratorRuntime.async(function _callee6$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                setShow(!show);\n                _context7.next = 3;\n                return _regeneratorRuntime.awrap(openDatabase());\n\n              case 3:\n                db = _context7.sent;\n                _context7.next = 6;\n                return _regeneratorRuntime.awrap(getWordNoteByWord(db, wordInfo.word));\n\n              case 6:\n                note = _context7.sent;\n\n                if (note) {\n                  setText(note.note);\n                }\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      children: _jsx(FontAwesome, {\n        name: \"edit\",\n        size: 25,\n        color: \"#FFFFFF\",\n        style: {\n          marginRight: 15,\n          marginBottom: -5,\n          marginTop: 10\n        }\n      })\n    }), show && _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        backgroundColor: 'rgb(14, 192, 167)'\n      },\n      children: [_jsx(TextInput, {\n        multiline: true,\n        numberOfLines: 8,\n        onChangeText: function onChangeText(val) {\n          return setText(val);\n        },\n        value: text,\n        style: {\n          backgroundColor: \"aquamarine\",\n          marginTop: 10,\n          color: \"red\",\n          paddingLeft: 5\n        }\n      }), _jsxs(View, {\n        style: {\n          display: 'flex',\n          backgroundColor: 'rgb(14, 192, 167)',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Pressable, {\n          onPress: function _callee7() {\n            var db, note, _data;\n\n            return _regeneratorRuntime.async(function _callee7$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return _regeneratorRuntime.awrap(openDatabase());\n\n                  case 2:\n                    db = _context8.sent;\n                    _context8.next = 5;\n                    return _regeneratorRuntime.awrap(getWordNoteByWord(db, wordInfo.word));\n\n                  case 5:\n                    note = _context8.sent;\n\n                    if (!(!note && text != '')) {\n                      _context8.next = 12;\n                      break;\n                    }\n\n                    _context8.next = 9;\n                    return _regeneratorRuntime.awrap(insertNote(db, wordInfo.word, text));\n\n                  case 9:\n                    Alert.alert('Create Note Success');\n                    _context8.next = 20;\n                    break;\n\n                  case 12:\n                    if (!(note && text != '')) {\n                      _context8.next = 20;\n                      break;\n                    }\n\n                    _context8.next = 15;\n                    return _regeneratorRuntime.awrap(UpdateWordNote(db, wordInfo.word, text));\n\n                  case 15:\n                    _context8.next = 17;\n                    return _regeneratorRuntime.awrap(getWordNoteByWord(db, wordInfo.word));\n\n                  case 17:\n                    _data = _context8.sent;\n                    console.log(_data);\n                    Alert.alert('Edit Note Success');\n\n                  case 20:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          style: {\n            width: '20%'\n          },\n          children: _jsx(FontAwesome, {\n            name: \"save\",\n            size: 25,\n            color: \"#FFFFFF\"\n          })\n        }), _jsx(Pressable, {\n          onPress: function _callee8() {\n            var db;\n            return _regeneratorRuntime.async(function _callee8$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    setShow(false);\n                    _context9.next = 3;\n                    return _regeneratorRuntime.awrap(openDatabase());\n\n                  case 3:\n                    db = _context9.sent;\n                    _context9.next = 6;\n                    return _regeneratorRuntime.awrap(deleteNote(db, wordInfo.word));\n\n                  case 6:\n                    setText(\"\");\n\n                  case 7:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          style: {\n            width: '20%'\n          },\n          children: _jsx(FontAwesome, {\n            name: \"trash\",\n            size: 25,\n            color: \"#FFFFFF\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet');\n}\n\nvar styles = StyleSheet.create({\n  getStartedContainer: {\n    marginHorizontal: 50,\n    backgroundColor: '#0EC0A7'\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15\n  },\n  getStartedTextItalic: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15,\n    fontStyle: 'italic'\n  },\n  pronunciation: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15,\n    fontWeight: 'bold'\n  },\n  infoText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFFF00'\n  },\n  infoDetail: {\n    fontSize: 16,\n    color: '#E42185'\n  },\n  infoDetailSmall: {\n    fontSize: 14,\n    color: '#E56B29'\n  },\n  infoDetailSmallBold: {\n    fontSize: 16,\n    color: '#E56B29',\n    fontStyle: 'italic',\n    fontWeight: 'bold'\n  },\n  exampleText: {\n    fontSize: 12,\n    fontStyle: 'italic',\n    fontWeight: '300'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {}\n});","map":{"version":3,"names":["WebBrowser","Audio","Text","View","FontAwesome","useState","deleteNote","getWordNoteByWord","insertNote","openDatabase","UpdateWordNote","SearchTextInfo","navigation","data","path","sound","setSound","text","setText","show","setShow","playSound","url","Sound","loadAsync","uri","playAsync","wordInfo","meanings","styles","getStartedContainer","pronunciation","phonetic","phonetics","map","value","key","display","flexDirection","backgroundColor","getStartedTextItalic","audio","marginLeft","separator","definitions","infoText","partOfSpeech","def","num","getStartedText","definition","synonyms","length","sys","num2","navigate","infoDetailSmallBold","antonyms","infoDetailSmall","anym","example","exampleText","infoDetail","db","word","note","marginRight","marginBottom","marginTop","val","color","paddingLeft","Alert","alert","console","log","width","handleHelpPress","openBrowserAsync","StyleSheet","create","marginHorizontal","marginVertical","height","homeScreenFilename","codeHighlightContainer","borderRadius","paddingHorizontal","fontSize","lineHeight","fontStyle","fontWeight","helpContainer","helpLink","paddingVertical","helpLinkText"],"sources":["/Users/littlecorn/Documents/en-dictionary/components/SearchTextInfo.tsx"],"sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport { StyleSheet, TouchableOpacity, Pressable, TextInput, Button, Alert } from 'react-native';\nimport { Audio } from 'expo-av';\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useEffect, useState } from 'react';\nimport {deleteNote, getWordNoteByWord, insertNote, openDatabase, UpdateWordNote } from '../db';\nexport default function SearchTextInfo({ navigation, data, path }: { navigation: any, data: any, path: string }) {\n  const [sound, setSound] = useState({} as any);\n  const [text, setText] = useState(\"\");\n  const [show, setShow] = useState(false);\n  async function playSound(url: any) {\n    const sound = new Audio.Sound();\n    await sound.loadAsync({ uri: url })\n    setSound(sound);\n    await sound.playAsync();\n  }\n  const wordInfo = !!data && data[0] || {};\n  const meanings = wordInfo.meanings || [];\n  return (\n    <View style={styles.getStartedContainer}>\n      <Text\n        style={styles.pronunciation}\n        lightColor=\"rgba(0,0,0,0.8)\"\n        darkColor=\"rgba(255,255,255,0.8)\">\n        Pronunciation: {wordInfo.phonetic}\n      </Text>\n      {!!wordInfo.phonetics && wordInfo.phonetics.map((value: any, key: any) => {\n        return (\n          <View key={key} style={{ display: \"flex\", flexDirection: 'row', backgroundColor: '#0EC0A7' }}>\n            <Text\n              style={styles.getStartedTextItalic}\n              lightColor=\"rgba(0,0,0,0.8)\"\n              darkColor=\"rgba(255,255,255,0.8)\">\n              {key == 0 ? \"(enUK)\" : \"(enUS)\"} : {value.text || \"\"}\n            </Text>\n            {!!value.audio ?\n              <Pressable\n                onPress={async () => await playSound(value.audio)}\n              >\n\n                <FontAwesome\n                  name=\"file-audio-o\"\n                  size={18}\n                  style={{ marginLeft: 15 }}\n                  color=\"#FFFFFF\"\n                />\n              </Pressable> : null\n            }\n          </View>\n        )\n      })}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      {!!meanings && meanings.map((value: any, key: any) => {\n        const definitions = value.definitions || [];\n        return (\n          <View style={{ backgroundColor: '#0EC0A7' }} key={key}>\n            <Text\n              style={styles.infoText}\n              lightColor=\"rgba(0,0,0,0.8)\"\n              darkColor=\"rgba(255,255,255,0.8)\">\n              {value.partOfSpeech || ''}\n            </Text>\n            {!!definitions && definitions.map((def: any, num: any) => {\n              return (\n                <View key={num} style={{ display: 'flex', backgroundColor: '#0EC0A7' }}>\n                  <Text\n                    style={styles.getStartedText}\n                    lightColor=\"rgba(0,0,0,0.8)\"\n                    darkColor=\"rgba(255,255,255,0.8)\">\n                    {num + 1}. {def.definition || ''}\n                  </Text>\n                  {!def.synonyms && def.synonyms.length != 0 &&\n                    <Text\n                      style={styles.getStartedText}\n                      lightColor=\"rgba(0,0,0,0.8)\"\n                      darkColor=\"rgba(255,255,255,0.8)\">\n                      {/* Synonyms: {!!def.synonyms && def.synonyms.join(\", \").toString() || ''} */}\n                      synonyms:\n                      {!def.synonyms.map((sys: any, num2: any) => {\n                        return (\n                          <Pressable\n                            key={num2}\n                            onPress={async () => navigation.navigate('Modal', { value: sys, navigation: navigation })}\n                          >\n\n                            <Text\n                              style={styles.infoDetailSmallBold}\n                              lightColor=\"rgba(0,0,0,0.8)\"\n                              darkColor=\"rgba(255,255,255,0.8)\"> {sys} </Text>\n                          </Pressable>\n                        )\n                      })}\n                    </Text>\n                  }\n                  {!!def.antonyms && def.antonyms.length != 0 &&\n                    <Text\n                      style={styles.infoDetailSmall}\n                      lightColor=\"rgba(0,0,0,0.8)\"\n                      darkColor=\"rgba(255,255,255,0.8)\">\n                      {/* Antonyms: {!!def.antonyms && def.antonyms.join(\", \").toString() || ''} */}\n                      antonyms:\n                      {def.antonyms.map((anym: any, num2: any) => {\n                        return (\n                          <Pressable\n                            key={num2}\n                            onPress={async () => navigation.navigate('Modal', { value: anym, navigation: navigation })}\n                          >\n\n                            <Text\n                              style={styles.infoDetailSmallBold}\n                              lightColor=\"rgba(0,0,0,0.8)\"\n                              darkColor=\"rgba(255,255,255,0.8)\"> {anym} </Text>\n                          </Pressable>)\n                      })}\n                    </Text>\n                  }\n                  {!!def.example &&\n                    <Text\n                      style={styles.exampleText}\n                      lightColor=\"rgba(0,0,0,0.8)\"\n                      darkColor=\"rgba(255,255,255,0.8)\">\n                      Example: {def.example || ''}\n                    </Text>\n                  }\n                </View>\n              )\n            })}\n            {!!value.synonyms && value.synonyms.length != 0 &&\n              <Text\n                style={styles.infoDetail}\n                lightColor=\"rgba(0,0,0,0.8)\"\n                darkColor=\"rgba(255,255,255,0.8)\">\n                {/* Synonyms: {!!value.synonyms && value.synonyms.join(\", \").toString() || ''} */}\n                Synonyms:\n                {value.synonyms.map((sys: any, num2: any) => {\n                  return (\n                    <Pressable\n                      key={num2}\n                      onPress={async () => navigation.navigate('Modal', { value: sys, navigation: navigation })}\n                    >\n\n                      <Text\n                        style={styles.infoDetailSmallBold}\n                        lightColor=\"rgba(0,0,0,0.8)\"\n                        darkColor=\"rgba(255,255,255,0.8)\"> {sys} </Text>\n                    </Pressable>\n                  )\n                })}\n              </Text>\n            }\n            {!!value.antonyms && value.antonyms.length != 0 &&\n              <Text\n                style={styles.infoDetail}\n                lightColor=\"rgba(0,0,0,0.8)\"\n                darkColor=\"rgba(255,255,255,0.8)\">\n                {/* Synonyms: {!!value.synonyms && value.synonyms.join(\", \").toString() || ''} */}\n                Antonyms:\n                {value.antonyms.map((anym: any, num2: any) => {\n                  return (\n                    <Pressable\n                      key={num2}\n                      onPress={async () => navigation.navigate('Modal', { value: anym, navigation: navigation })}\n                    >\n\n                      <Text\n                        style={styles.infoDetailSmallBold}\n                        lightColor=\"rgba(0,0,0,0.8)\"\n                        darkColor=\"rgba(255,255,255,0.8)\"> {anym} </Text>\n                    </Pressable>\n                  )\n                })}\n              </Text>\n            } \n           \n          </View>\n        )\n\n      })}\n   <Button title='Note' onPress={async () => {\n              setShow(!show);\n              const db = await openDatabase();\n              const note = await getWordNoteByWord(db, wordInfo.word);\n              if (note){\n                setText(note.note);\n              }\n            }}>\n              <FontAwesome\n                name=\"edit\"\n                size={25}\n                color='#FFFFFF'\n                style={{ marginRight: 15, marginBottom: -5, marginTop: 10 }}\n              />\n            </Button>\n            {show &&\n              <View style={{ display: \"flex\", flexDirection: 'column', backgroundColor: 'rgb(14, 192, 167)' }}>\n                <TextInput\n                  multiline={true}\n                  numberOfLines={8}\n                  onChangeText={(val) => setText(val)}\n                  value={text}\n                  style={{\n                    backgroundColor: \"aquamarine\",\n                    marginTop: 10,\n                    color: \"red\",\n                    paddingLeft: 5,\n                  }}\n                />\n                <View style={{display: 'flex',backgroundColor: 'rgb(14, 192, 167)', flexDirection: 'row' }}>\n                  <Pressable\n                    onPress={async () => {\n                      const db = await openDatabase();\n                      const note = await getWordNoteByWord(db, wordInfo.word); \n                      if (!note && text!=''){\n                        await insertNote(db,wordInfo.word,text);\n                        Alert.alert('Create Note Success')\n                      }\n                      else if (note && text!=''){\n                        await UpdateWordNote(db,wordInfo.word,text)\n                        let data = await getWordNoteByWord(db, wordInfo.word); \n                        console.log(data);\n                        Alert.alert('Edit Note Success')\n                      } \n                      \n                    }}\n\n                    style={{\n                      width: '20%'\n                    }}>\n\n                    <FontAwesome\n                      name=\"save\"\n                      size={25}\n                      color='#FFFFFF'\n                    />\n                  </Pressable>\n                  <Pressable\n                    onPress={async () => {\n                      setShow(false);\n                      const db = await openDatabase();\n                      await deleteNote(db,wordInfo.word);\n                      setText(\"\");\n                    }}\n\n                    style={{\n                      width: '20%'\n                    }}>\n\n                    <FontAwesome\n                      name=\"trash\"\n                      size={25}\n                      color='#FFFFFF'\n                    />\n                  </Pressable>\n                </View>\n              </View>\n            }\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    marginHorizontal: 50,\n    backgroundColor: '#0EC0A7'\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    // width: '80vw',\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15,\n  },\n  getStartedTextItalic: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15,\n    fontStyle: 'italic'\n  },\n  pronunciation: {\n    fontSize: 13,\n    marginBottom: 10,\n    lineHeight: 15,\n    fontWeight: 'bold'\n  },\n  infoText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFFF00'\n  },\n  infoDetail: {\n    fontSize: 16,\n    color: '#E42185'\n  },\n  infoDetailSmall: {\n    fontSize: 14,\n    color: '#E56B29'\n  },\n  infoDetailSmallBold: {\n    fontSize: 16,\n    color: '#E56B29',\n    fontStyle: 'italic',\n    fontWeight: 'bold'\n  },\n  exampleText: {\n    fontSize: 12,\n    fontStyle: 'italic',\n    fontWeight: '300'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}