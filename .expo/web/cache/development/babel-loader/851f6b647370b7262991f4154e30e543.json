{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport \"./db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  var loadDataCallback = useCallback(function _callee() {\n    var initTodos, db, storedTodoItems;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            initTodos = [{\n              id: 0,\n              value: 'go to shop'\n            }, {\n              id: 1,\n              value: 'eat at least a one healthy foods'\n            }, {\n              id: 2,\n              value: 'Do some exercises'\n            }];\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getDBConnection());\n\n          case 4:\n            db = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(createTable(db));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(getTodoItems(db));\n\n          case 9:\n            storedTodoItems = _context.sent;\n\n            if (!storedTodoItems.length) {\n              _context.next = 14;\n              break;\n            }\n\n            setTodos(storedTodoItems);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(saveTodoItems(db, initTodos));\n\n          case 16:\n            setTodos(initTodos);\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  }, []);\n  useEffect(function () {\n    loadDataCallback();\n  }, [loadDataCallback]);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","useCallback","useEffect","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","App","isLoadingComplete","colorScheme","loadDataCallback","initTodos","id","value","getDBConnection","db","createTable","getTodoItems","storedTodoItems","length","setTodos","saveTodoItems","console","error"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {} from './db';\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const loadDataCallback = useCallback(async () => {\n    try {\n      const initTodos = [{ id: 0, value: 'go to shop' }, { id: 1, value: 'eat at least a one healthy foods' }, { id: 2, value: 'Do some exercises' }];\n      const db = await getDBConnection();\n      await createTable(db);\n      const storedTodoItems = await getTodoItems(db);\n      if (storedTodoItems.length) {\n        setTodos(storedTodoItems);\n      } else {\n        await saveTodoItems(db, initTodos);\n        setTodos(initTodos);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadDataCallback();\n  }, [loadDataCallback]);\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA;;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGJ,kBAAkB,EAA5C;EACA,IAAMK,WAAW,GAAGJ,cAAc,EAAlC;EACA,IAAMK,gBAAgB,GAAGT,WAAW,CAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAE3BU,SAF2B,GAEf,CAAC;cAAEC,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAD,EAAiC;cAAED,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAjC,EAAuF;cAAED,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAvF,CAFe;YAAA;YAAA,iCAGhBC,eAAe,EAHC;;UAAA;YAG3BC,EAH2B;YAAA;YAAA,iCAI3BC,WAAW,CAACD,EAAD,CAJgB;;UAAA;YAAA;YAAA,iCAKHE,YAAY,CAACF,EAAD,CALT;;UAAA;YAK3BG,eAL2B;;YAAA,KAM7BA,eAAe,CAACC,MANa;cAAA;cAAA;YAAA;;YAO/BC,QAAQ,CAACF,eAAD,CAAR;YAP+B;YAAA;;UAAA;YAAA;YAAA,iCASzBG,aAAa,CAACN,EAAD,EAAKJ,SAAL,CATY;;UAAA;YAU/BS,QAAQ,CAACT,SAAD,CAAR;;UAV+B;YAAA;YAAA;;UAAA;YAAA;YAAA;YAajCW,OAAO,CAACC,KAAR;;UAbiC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAejC,EAfiC,CAApC;EAiBArB,SAAS,CAAC,YAAM;IACdQ,gBAAgB;EACjB,CAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;EAGA,IAAI,CAACF,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OACE,MAAC,gBAAD;MAAA,WACE,KAAC,UAAD;QAAY,WAAW,EAAEC;MAAzB,EADF,EAEE,KAAC,SAAD,KAFF;IAAA,EADF;EAMD;AACF"},"metadata":{},"sourceType":"module"}