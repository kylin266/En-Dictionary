{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect, useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { createTable, getDBConnection, getWordHistory } from \"./db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var loadDataCallback = useCallback(function _callee() {\n    var initTodos, db, storedTodoItems;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            initTodos = [{\n              id: 0,\n              value: 'go to shop'\n            }, {\n              id: 1,\n              value: 'eat at least a one healthy foods'\n            }, {\n              id: 2,\n              value: 'Do some exercises'\n            }];\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getDBConnection());\n\n          case 4:\n            db = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(createTable(db));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(getWordHistory(db));\n\n          case 9:\n            storedTodoItems = _context.sent;\n\n            if (storedTodoItems.length) {\n              setData(storedTodoItems);\n            }\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }, []);\n  useEffect(function () {\n    loadDataCallback();\n  }, [loadDataCallback]);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","useCallback","useEffect","useState","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","createTable","getDBConnection","getWordHistory","App","isLoadingComplete","colorScheme","data","setData","loadDataCallback","initTodos","id","value","db","storedTodoItems","length","console","error"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useCallback, useEffect, useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {createTable,getDBConnection,getWordHistory} from './db';\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const [data,setData] = useState([]);\n  const loadDataCallback = useCallback(async () => {\n    try {\n      const initTodos = [{ id: 0, value: 'go to shop' }, { id: 1, value: 'eat at least a one healthy foods' }, { id: 2, value: 'Do some exercises' }];\n      const db = await getDBConnection();\n      await createTable(db);\n      const storedTodoItems = await getWordHistory(db);\n      if (storedTodoItems.length) {\n        setData(storedTodoItems);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadDataCallback();\n  }, [loadDataCallback]);\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,cAApC;;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGP,kBAAkB,EAA5C;EACA,IAAMQ,WAAW,GAAGP,cAAc,EAAlC;;EACA,gBAAuBH,QAAQ,CAAC,EAAD,CAA/B;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAYC,OAAZ;;EACA,IAAMC,gBAAgB,GAAGf,WAAW,CAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAE3BgB,SAF2B,GAEf,CAAC;cAAEC,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAD,EAAiC;cAAED,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAjC,EAAuF;cAAED,EAAE,EAAE,CAAN;cAASC,KAAK,EAAE;YAAhB,CAAvF,CAFe;YAAA;YAAA,iCAGhBV,eAAe,EAHC;;UAAA;YAG3BW,EAH2B;YAAA;YAAA,iCAI3BZ,WAAW,CAACY,EAAD,CAJgB;;UAAA;YAAA;YAAA,iCAKHV,cAAc,CAACU,EAAD,CALX;;UAAA;YAK3BC,eAL2B;;YAMjC,IAAIA,eAAe,CAACC,MAApB,EAA4B;cAC1BP,OAAO,CAACM,eAAD,CAAP;YACD;;YARgC;YAAA;;UAAA;YAAA;YAAA;YAUjCE,OAAO,CAACC,KAAR;;UAViC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAYjC,EAZiC,CAApC;EAcAtB,SAAS,CAAC,YAAM;IACdc,gBAAgB;EACjB,CAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;EAGA,IAAI,CAACJ,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OACE,MAAC,gBAAD;MAAA,WACE,KAAC,UAAD;QAAY,WAAW,EAAEC;MAAzB,EADF,EAEE,KAAC,SAAD,KAFF;IAAA,EADF;EAMD;AACF"},"metadata":{},"sourceType":"module"}