{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport SearchTextInfo from \"../components/SearchTextInfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ModalScreen(props) {\n  var value = props.route.params.value;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var api = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + value;\n  var randomData = 'https://random-word-api.herokuapp.com/all';\n  useEffect(function () {\n    var isMounted = true;\n\n    if (value != 'randomWord') {\n      (function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(api).then(function (res) {\n                  if (res.data) {\n                    if (isMounted) setData(res.data);\n                  }\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    } else {\n      (function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(api).then(function (res) {\n                  if (res.data) {\n                    if (isMounted) setData(res.data);\n                  }\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n\n      (function _callee3() {\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(api).then(function (res) {\n                  if (res.data) {\n                    if (isMounted) setData(res.data);\n                  }\n                }));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: value\n    }), _jsx(View, {\n      style: styles.separator,\n      lightColor: \"#eee\",\n      darkColor: \"rgba(255,255,255,0.1)\"\n    }), _jsx(SearchTextInfo, {\n      data: data,\n      path: \"/screens/ModalScreen.tsx\"\n    }), _jsx(StatusBar, {\n      style: Platform.OS === 'ios' ? 'light' : 'auto'\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"names":["axios","StatusBar","useEffect","useState","Text","View","SearchTextInfo","ModalScreen","props","value","route","params","data","setData","api","randomData","isMounted","get","then","res","styles","container","title","separator","Platform","OS","StyleSheet","create","flex","alignItems","marginTop","fontSize","fontWeight","marginVertical","height","width"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/screens/ModalScreen.tsx"],"sourcesContent":["import axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport SearchTextInfo from '../components/SearchTextInfo';\nexport default function ModalScreen(props: any) {\n  const { value } = props.route.params;\n  const [data, setData] = useState([] as any);\n  let api = `https://api.dictionaryapi.dev/api/v2/entries/en/${value}`\n  let randomData = 'https://random-word-api.herokuapp.com/all';\n  useEffect(() => {\n    let isMounted = true;\n    if (value != 'randomWord') {\n      (async () => {\n        await axios.get(api).then(res => {\n          if (res.data) {\n            if (isMounted) setData(res.data);\n          }\n        })\n      })();\n    }\n    else {\n      (async () => {\n        await axios.get(api).then(res => {\n          if (res.data) {\n            if (isMounted) setData(res.data);\n          }\n        })\n      })();\n      (async () => {\n        await axios.get(api).then(res => {\n          if (res.data) {\n            if (isMounted) setData(res.data);\n          }\n        })\n      })();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [])\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{value}</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <SearchTextInfo data={data} path=\"/screens/ModalScreen.tsx\" />\n\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}