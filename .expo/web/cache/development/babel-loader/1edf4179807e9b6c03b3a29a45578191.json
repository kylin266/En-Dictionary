{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, View } from \"../components/Themed\";\nimport { WebView } from 'react-native-webview';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ModalScreenVi(props) {\n  var value = props.route.params.value;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(value),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      err = _useState6[0],\n      setErr = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isMounted = _useState8[0],\n      setMounted = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      favorite = _useState10[0],\n      setFavorite = _useState10[1];\n\n  var api = \"https://dict.laban.vn/find?type=1&query=\" + value;\n  useEffect(function () {\n    setTitle(value);\n    console.log(api);\n\n    (function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(api).then(function _callee(res) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (res.data) {\n                          if (isMounted) {\n                            console.log(res);\n                            setData(res);\n                            setMounted(false);\n                          }\n\n                          ;\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                setMounted(false);\n                if (err.response) setErr(err.response.data.message);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      setMounted(false);\n    };\n  }, []);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [!!isMounted && _jsx(ActivityIndicator, {\n      color: \"#fff\"\n    }), _jsx(View, {\n      style: styles.separator,\n      lightColor: \"#eee\",\n      darkColor: \"rgba(255,255,255,0.1)\"\n    }), !!data && _jsx(WebView, {\n      originWhitelist: ['*'],\n      source: {\n        html: data\n      }\n    }), data && _jsx(Text, {\n      style: styles.title,\n      children: err\n    }), _jsx(StatusBar, {\n      style: Platform.OS === 'ios' ? 'light' : 'auto'\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"names":["axios","StatusBar","useEffect","useState","Text","View","WebView","ModalScreenVi","props","value","route","params","data","setData","title","setTitle","err","setErr","isMounted","setMounted","favorite","setFavorite","api","console","log","get","then","res","catch","response","message","styles","container","separator","html","Platform","OS","StyleSheet","create","flex","marginTop","fontSize","textAlign","fontWeight","marginVertical","height","width"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/screens/ModalScreenVi.tsx"],"sourcesContent":["import axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { Platform, StyleSheet, ActivityIndicator, ScrollView, Pressable } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Text, View } from '../components/Themed';\nimport SearchTextInfo from '../components/SearchTextInfo';\nimport { WebView } from 'react-native-webview';\nimport wordData from '../words.json';\nimport { addHistory, deleteBookmark, getWordBookmarkByWord, getWordHistoryByWord, insertBookmark, openDatabase } from '../db';\nexport default function ModalScreenVi(props: any) {\n  const { value } = props.route.params;\n  const [data, setData] = useState({} as any);\n  const [title, setTitle] = useState(value);\n  const [err, setErr] = useState('');\n  const [isMounted, setMounted] = useState(true);\n  const [favorite, setFavorite] = useState(false);\n  let api = `https://dict.laban.vn/find?type=1&query=${value}`\n  useEffect(() => {\n    setTitle(value);\n    console.log(api);\n    (async () => {\n      await axios.get(api).then(async res => {\n        if (res.data) {\n          if (isMounted) {\n            console.log(res);\n            setData(res); setMounted(false);\n          };\n        }\n      }).catch(err => {\n        setMounted(false)\n        if (err.response)\n          setErr(err.response.data.message);\n      })\n    })();\n\n    return () => {\n      setMounted(false);\n    };\n  }, [])\n  return (\n\n    <ScrollView style={styles.container}>\n      {!!isMounted && <ActivityIndicator color={\"#fff\"} />}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      {!!data && <WebView\n        originWhitelist={['*']}\n        source={{ html: data }}\n      />}\n      {data && <Text style={styles.title}>{err}</Text>}\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%',\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;AAGA,SAASC,IAAT,EAAeC,IAAf;AAEA,SAASC,OAAT,QAAwB,sBAAxB;;;AAGA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;EAChD,IAAQC,KAAR,GAAkBD,KAAK,CAACE,KAAN,CAAYC,MAA9B,CAAQF,KAAR;;EACA,gBAAwBN,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0BV,QAAQ,CAACM,KAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAsBZ,QAAQ,CAAC,EAAD,CAA9B;EAAA;EAAA,IAAOa,GAAP;EAAA,IAAYC,MAAZ;;EACA,iBAAgCd,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOe,SAAP;EAAA,IAAkBC,UAAlB;;EACA,iBAAgChB,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOiB,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAIC,GAAG,gDAA8Cb,KAArD;EACAP,SAAS,CAAC,YAAM;IACda,QAAQ,CAACN,KAAD,CAAR;IACAc,OAAO,CAACC,GAAR,CAAYF,GAAZ;;IACA,CAAC;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACOtB,KAAK,CAACyB,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoB,iBAAMC,GAAN;gBAAA;kBAAA;oBAAA;sBAAA;wBACxB,IAAIA,GAAG,CAACf,IAAR,EAAc;0BACZ,IAAIM,SAAJ,EAAe;4BACbK,OAAO,CAACC,GAAR,CAAYG,GAAZ;4BACAd,OAAO,CAACc,GAAD,CAAP;4BAAcR,UAAU,CAAC,KAAD,CAAV;0BACf;;0BAAA;wBACF;;sBANuB;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA;cAAA,CAApB,EAOHS,KAPG,CAOG,UAAAZ,GAAG,EAAI;gBACdG,UAAU,CAAC,KAAD,CAAV;gBACA,IAAIH,GAAG,CAACa,QAAR,EACEZ,MAAM,CAACD,GAAG,CAACa,QAAJ,CAAajB,IAAb,CAAkBkB,OAAnB,CAAN;cACH,CAXK,CADP;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;;IAeA,OAAO,YAAM;MACXX,UAAU,CAAC,KAAD,CAAV;IACD,CAFD;EAGD,CArBQ,EAqBN,EArBM,CAAT;EAsBA,OAEE,MAAC,UAAD;IAAY,KAAK,EAAEY,MAAM,CAACC,SAA1B;IAAA,WACG,CAAC,CAACd,SAAF,IAAe,KAAC,iBAAD;MAAmB,KAAK,EAAE;IAA1B,EADlB,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEa,MAAM,CAACE,SAApB;MAA+B,UAAU,EAAC,MAA1C;MAAiD,SAAS,EAAC;IAA3D,EAFF,EAGG,CAAC,CAACrB,IAAF,IAAU,KAAC,OAAD;MACT,eAAe,EAAE,CAAC,GAAD,CADR;MAET,MAAM,EAAE;QAAEsB,IAAI,EAAEtB;MAAR;IAFC,EAHb,EAOGA,IAAI,IAAI,KAAC,IAAD;MAAM,KAAK,EAAEmB,MAAM,CAACjB,KAApB;MAAA,UAA4BE;IAA5B,EAPX,EASE,KAAC,SAAD;MAAW,KAAK,EAAEmB,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,OAAxB,GAAkC;IAApD,EATF;EAAA,EAFF;AAcD;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CADG;IAETC,SAAS,EAAE;EAFF,CADoB;EAK/B1B,KAAK,EAAE;IACL2B,QAAQ,EAAE,EADL;IAELC,SAAS,EAAE,QAFN;IAGLC,UAAU,EAAE;EAHP,CALwB;EAU/BV,SAAS,EAAE;IACTW,cAAc,EAAE,EADP;IAETC,MAAM,EAAE,CAFC;IAGTC,KAAK,EAAE;EAHE;AAVoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}