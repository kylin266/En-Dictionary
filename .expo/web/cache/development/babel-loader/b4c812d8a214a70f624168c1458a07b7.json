{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { openDatabase } from 'react-native-sqlite-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var getDBConnection = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", openDatabase({\n            name: 'dictionary.db',\n            location: 'default'\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var createTable = function _callee2(db) {\n  var query;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          query = \"CREATE TABLE IF NOT EXISTS \" + tableName + \"(\\n        value TEXT NOT NULL\\n    );\";\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(db.executeSql(query));\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","openDatabase","getDBConnection","name","location","createTable","db","query","tableName","executeSql","App","isLoadingComplete","colorScheme"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {openDatabase, SQLiteDatabase} from 'react-native-sqlite-storage';\n\nexport const getDBConnection = async () => {\n  return openDatabase({name: 'dictionary.db', location: 'default'});\n};\n\nexport const createTable = async (db: SQLiteDatabase) => {\n  // create table if not exists\n  const query = `CREATE TABLE IF NOT EXISTS ${tableName}(\n        value TEXT NOT NULL\n    );`;\n\n  await db.executeSql(query);\n};\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,SAAQC,YAAR,QAA2C,6BAA3C;;;AAEA,OAAO,IAAMC,eAAe,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,iCACtBD,YAAY,CAAC;YAACE,IAAI,EAAE,eAAP;YAAwBC,QAAQ,EAAE;UAAlC,CAAD,CADU;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;AAIP,OAAO,IAAMC,WAAW,GAAG,kBAAOC,EAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAEnBC,KAFmB,mCAEmBC,SAFnB;UAAA;UAAA,iCAMnBF,EAAE,CAACG,UAAH,CAAcF,KAAd,CANmB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAApB;AAQP,eAAe,SAASG,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGb,kBAAkB,EAA5C;EACA,IAAMc,WAAW,GAAGb,cAAc,EAAlC;;EAEA,IAAI,CAACY,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OACE,MAAC,gBAAD;MAAA,WACE,KAAC,UAAD;QAAY,WAAW,EAAEC;MAAzB,EADF,EAEE,KAAC,SAAD,KAFF;IAAA,EADF;EAMD;AACF"},"metadata":{},"sourceType":"module"}