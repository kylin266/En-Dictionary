{"ast":null,"code":"import * as WebBrowser from 'expo-web-browser';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../constants/Colors\";\nimport { MonoText } from \"./StyledText\";\nimport { Text, View } from \"./Themed\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditScreenInfo(_ref) {\n  var path = _ref.path;\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.getStartedContainer,\n      children: [_jsx(FontAwesome, {\n        name: \"search\",\n        size: 25\n      }), _jsx(Text, {\n        style: styles.getStartedText,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        children: \"Word of the day!\"\n      }), _jsx(Text, {\n        style: styles.getStartedText,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        children: \"History\"\n      }), _jsx(Text, {\n        style: styles.getStartedText,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        children: \"Bookmark\"\n      }), _jsx(Text, {\n        style: styles.getStartedText,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        children: \"Help\"\n      }), _jsx(Text, {\n        style: styles.getStartedText,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        children: \"Random word\"\n      }), _jsx(View, {\n        style: [styles.codeHighlightContainer, styles.homeScreenFilename],\n        darkColor: \"rgba(255,255,255,0.05)\",\n        lightColor: \"rgba(0,0,0,0.05)\",\n        children: _jsx(MonoText, {\n          children: path\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.helpContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleHelpPress,\n        style: styles.helpLink,\n        children: _jsx(Text, {\n          style: styles.helpLinkText,\n          lightColor: Colors.light.tint,\n          children: \"Tap here if your app doesn't automatically update after making changes\"\n        })\n      })\n    })]\n  });\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet');\n}\n\nvar styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["WebBrowser","Colors","MonoText","Text","View","FontAwesome","EditScreenInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","light","tint","openBrowserAsync","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/components/EditScreenInfo.tsx"],"sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport { StyleSheet, TouchableOpacity, ColorSchemeName } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\nimport { FontAwesome } from '@expo/vector-icons';\nimport useColorScheme from '../hooks/useColorScheme';\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n      <FontAwesome\n                      name=\"search\"\n                      size={25}\n                    />\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Word of the day!\n        </Text>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          History\n        </Text>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Bookmark\n        </Text>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Help\n        </Text>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Random word\n        </Text>\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;;;AAGA,OAAOC,MAAP;AACA,SAASC,QAAT;AACA,SAASC,IAAT,EAAeC,IAAf;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,eAAe,SAASC,cAAT,OAAoD;EAAA,IAA1BC,IAA0B,QAA1BA,IAA0B;EACjE,OACE,MAAC,IAAD;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,mBAApB;MAAA,WACA,KAAC,WAAD;QACgB,IAAI,EAAC,QADrB;QAEgB,IAAI,EAAE;MAFtB,EADA,EAKE,KAAC,IAAD;QACE,KAAK,EAAED,MAAM,CAACE,cADhB;QAEE,UAAU,EAAC,iBAFb;QAGE,SAAS,EAAC,uBAHZ;QAAA;MAAA,EALF,EAWE,KAAC,IAAD;QACE,KAAK,EAAEF,MAAM,CAACE,cADhB;QAEE,UAAU,EAAC,iBAFb;QAGE,SAAS,EAAC,uBAHZ;QAAA;MAAA,EAXF,EAiBE,KAAC,IAAD;QACE,KAAK,EAAEF,MAAM,CAACE,cADhB;QAEE,UAAU,EAAC,iBAFb;QAGE,SAAS,EAAC,uBAHZ;QAAA;MAAA,EAjBF,EAuBE,KAAC,IAAD;QACE,KAAK,EAAEF,MAAM,CAACE,cADhB;QAEE,UAAU,EAAC,iBAFb;QAGE,SAAS,EAAC,uBAHZ;QAAA;MAAA,EAvBF,EA6BE,KAAC,IAAD;QACE,KAAK,EAAEF,MAAM,CAACE,cADhB;QAEE,UAAU,EAAC,iBAFb;QAGE,SAAS,EAAC,uBAHZ;QAAA;MAAA,EA7BF,EAmCE,KAAC,IAAD;QACE,KAAK,EAAE,CAACF,MAAM,CAACG,sBAAR,EAAgCH,MAAM,CAACI,kBAAvC,CADT;QAEE,SAAS,EAAC,wBAFZ;QAGE,UAAU,EAAC,kBAHb;QAAA,UAIE,KAAC,QAAD;UAAA,UAAWL;QAAX;MAJF,EAnCF;IAAA,EADF,EA4CE,KAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACK,aAApB;MAAA,UACE,KAAC,gBAAD;QAAkB,OAAO,EAAEC,eAA3B;QAA4C,KAAK,EAAEN,MAAM,CAACO,QAA1D;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEP,MAAM,CAACQ,YAApB;UAAkC,UAAU,EAAEf,MAAM,CAACgB,KAAP,CAAaC,IAA3D;UAAA;QAAA;MADF;IADF,EA5CF;EAAA,EADF;AAsDD;;AAED,SAASJ,eAAT,GAA2B;EACzBd,UAAU,CAACmB,gBAAX,CACE,wFADF;AAGD;;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BZ,mBAAmB,EAAE;IACnBa,UAAU,EAAE,QADO;IAEnBC,gBAAgB,EAAE;EAFC,CADU;EAK/BX,kBAAkB,EAAE;IAClBY,cAAc,EAAE;EADE,CALW;EAQ/Bb,sBAAsB,EAAE;IACtBc,YAAY,EAAE,CADQ;IAEtBC,iBAAiB,EAAE;EAFG,CARO;EAY/BhB,cAAc,EAAE;IACdiB,QAAQ,EAAE,EADI;IAEdC,UAAU,EAAE,EAFE;IAGdC,SAAS,EAAE;EAHG,CAZe;EAiB/BhB,aAAa,EAAE;IACbiB,SAAS,EAAE,EADE;IAEbP,gBAAgB,EAAE,EAFL;IAGbD,UAAU,EAAE;EAHC,CAjBgB;EAsB/BP,QAAQ,EAAE;IACRgB,eAAe,EAAE;EADT,CAtBqB;EAyB/Bf,YAAY,EAAE;IACZa,SAAS,EAAE;EADC;AAzBiB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}