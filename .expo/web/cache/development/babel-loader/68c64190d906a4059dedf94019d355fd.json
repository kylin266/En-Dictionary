{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport SearchTextInfo from \"../components/SearchTextInfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ModalScreen(props) {\n  var value = props.route.params.value;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(value),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var api = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + value;\n  var randomData = 'https://random-word-api.herokuapp.com/all';\n  useEffect(function () {\n    var isMounted = true;\n\n    if (value != 'randomWord') {\n      setTitle(value);\n\n      (function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(api).then(function (res) {\n                  if (res.data) {\n                    if (isMounted) setData(res.data);\n                  }\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    } else {\n      (function _callee4() {\n        return _regeneratorRuntime.async(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(randomData).then(function _callee3(res) {\n                  var item, api;\n                  return _regeneratorRuntime.async(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          console.log('data', data);\n                          item = res[Math.floor(Math.random() * res.length)];\n                          console.log('randomw', item);\n                          setTitle(item);\n                          api = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + item;\n                          _context3.next = 7;\n                          return _regeneratorRuntime.awrap(function _callee2() {\n                            return _regeneratorRuntime.async(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    _context2.next = 2;\n                                    return _regeneratorRuntime.awrap(axios.get(api).then(function (res) {\n                                      if (res.data) {\n                                        if (isMounted) setData(res.data);\n                                      }\n                                    }));\n\n                                  case 2:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, null, null, null, Promise);\n                          }());\n\n                        case 7:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(View, {\n      style: styles.separator,\n      lightColor: \"#eee\",\n      darkColor: \"rgba(255,255,255,0.1)\"\n    }), _jsx(SearchTextInfo, {\n      data: data,\n      path: \"/screens/ModalScreen.tsx\"\n    }), _jsx(StatusBar, {\n      style: Platform.OS === 'ios' ? 'light' : 'auto'\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"names":["axios","StatusBar","useEffect","useState","Text","View","SearchTextInfo","ModalScreen","props","value","route","params","data","setData","title","setTitle","api","randomData","isMounted","get","then","res","console","log","item","Math","floor","random","length","styles","container","separator","Platform","OS","StyleSheet","create","flex","alignItems","marginTop","fontSize","fontWeight","marginVertical","height","width"],"sources":["/Users/littlecorn/Documents/lose-weight-apps/screens/ModalScreen.tsx"],"sourcesContent":["import axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { Platform, StyleSheet,ActivityIndicator } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport SearchTextInfo from '../components/SearchTextInfo';\nexport default function ModalScreen(props: any) {\n  const { value } = props.route.params;\n  const [data, setData] = useState([] as any);\n  const [title, setTitle] = useState(value);\n  let api = `https://api.dictionaryapi.dev/api/v2/entries/en/${value}`\n  let randomData = 'https://random-word-api.herokuapp.com/all';\n  useEffect(() => {\n    let isMounted = true;\n    if (value != 'randomWord') {\n      setTitle(value);\n      (async () => {\n        await axios.get(api).then(res => {\n          if (res.data) {\n            if (isMounted) setData(res.data);\n          }\n        })\n      })();\n    }\n    else {\n      (async () => {\n        await axios.get(randomData).then(async (res: any) => {\n          console.log('data',data);\n          var item = res[Math.floor(Math.random() * res.length)];\n          console.log('randomw', item);\n          setTitle(item);\n\n          let api = `https://api.dictionaryapi.dev/api/v2/entries/en/${item}`;\n          await (async () => {\n            await axios.get(api).then(res => {\n              if (res.data) {\n                if (isMounted) setData(res.data);\n              }\n            })\n          })();\n        })\n      })();\n\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [])\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <SearchTextInfo data={data} path=\"/screens/ModalScreen.tsx\" />\n\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 10,\n    height: 1,\n    width: '80%',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}